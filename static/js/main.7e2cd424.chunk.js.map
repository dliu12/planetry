{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","formSubmit","setFormSubmit","imageSrc","setImageSrc","useEffect","axios","get","then","res","data","url","console","log","className","onSubmit","e","preventDefault","type","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,I,6BCqCAA,MA/Bf,WACI,MAAoCC,IAAMC,UAAS,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCH,IAAMC,WAAtC,mBAAOG,EAAP,KAAiBC,EAAjB,KAiBA,OAVAL,IAAMM,WAAU,YACO,IAAfJ,IACAK,IAAMC,IAAN,sDAbA,6CAagEC,MAAK,SAAAC,GACjEL,EAAYK,EAAIC,KAAKC,KACrBC,QAAQC,IAAI,aAEhBX,GAAc,MAEnB,CAACD,IAGA,sBAAKa,UAAU,MAAf,UACI,sBAAMC,SAjBK,SAAAC,GACfA,EAAEC,iBACFf,GAAc,IAeV,SACI,wBAAQgB,KAAK,SAAb,wBAEJ,8BACI,qBAAKC,IAAKhB,UCnBXiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e2cd424.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg'\r\nimport './App.css'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nconst KEY = 'ohg5Z0I2qocabN6TrIojwkyo48DXZa8B6e3aPsPX'\r\n\r\nfunction App() {\r\n    const [formSubmit, setFormSubmit] = React.useState(false)\r\n    const [imageSrc, setImageSrc] = React.useState()\r\n\r\n    const formAction = e => {\r\n        e.preventDefault()\r\n        setFormSubmit(true)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (formSubmit === true) {\r\n            axios.get(`https://api.nasa.gov/planetary/apod?api_key=${KEY}`).then(res => {\r\n                setImageSrc(res.data.url)\r\n                console.log('called')\r\n            })\r\n            setFormSubmit(false)\r\n        }\r\n    }, [formSubmit])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={formAction}>\r\n                <button type=\"submit\">Generate</button>\r\n            </form>\r\n            <div>\r\n                <img src={imageSrc} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}